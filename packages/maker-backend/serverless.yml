service:
  name: cohope-backend

package:
  individually: true

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-prune-plugin

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    keepOutputDirectory: true
    includeModules: true
  env: ${file(./env.yml):${opt:stage, self:provider.stage}}
  serverless-offline:
    httpPort: 7000
    websocketPort: 7001
  websocketApiRouteSelectionExpression: $request.body.action

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-2
  stage: dev # default is dev :: package.json's command will overwrite this stage
  versionFunctions: true
  profile: ${opt:profile, 'cohope'}
  environment:
    APOLLO_KEY: ${self:custom.env.APOLLO_KEY}
    ENV: ${self:custom.env.NODE_ENV}
    KEY_OF_FUCKING_SECRET: ${self:custom.env.KEY_OF_FUCKING_SECRET}
    DATABASE: ${self:custom.env.DATABASE}
    DATABASE_USERNAME: ${self:custom.env.DATABASE_USERNAME}
    DATABASE_PASSWORD: ${self:custom.env.DATABASE_PASSWORD}
    DATABASE_PORT: ${self:custom.env.DATABASE_PORT}
    DATABASE_URL: ${self:custom.env.DATABASE_URL}
    GOOGLE_SECRET: ${self:custom.env.GOOGLE_SECRET}
    GOOGLE_CLIENT: ${self:custom.env.GOOGLE_CLIENT}
  deploymentBucket:
    blockPublicAccess: false # Prevents public access via ACLs or bucket policies. Default is false
  timeout: 30

functions:
  gql:
    handler: src/gql/index.handler
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
          cors: true
  loginOrRegister:
    handler: src/http/index.loginOrRegister
    events:
      - http:
          path: login-or-register
          method: post
          cors: true
  # websocketHandler:
  #   handler: dist/src/socket/index.connect
  #   events:
  #     - websocket:
  #         routeKey: $connect
  #     - websocket:
  #         routeKey: $disconnect

resources:
  Resources:
    GatewayResponseTimeout:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        ResponseType: INTEGRATION_TIMEOUT
        StatusCode: '504'
        RestApiId:
          Ref: ApiGatewayRestApi
